name: ${{values.app_name}}-cicd

on:
  push:
    paths:
      - src/**
    branches:
      - main

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - name: Set short git commit SHA
        shell: bash
        run: |
          echo "COMMIT_ID=${GITHUB_SHA::6}" >> "$GITHUB_ENV"
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ '${{ vars.DOCKERHUB_USERNAME }}' }}
          password: ${{ '${{ secrets.DOCKERHUB_TOKEN }}' }}
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: xcirel/${{values.app_name}}:${{ '${{ env.COMMIT_ID }}' }}
    outputs:
      commit_id: ${{ '${{ env.COMMIT_ID }} ' }}       
  cd:
    runs-on: self-hosted
    needs: [ci] 
    steps:
      
      - uses: actions/checkout@v4

      - name: Modify values file
        shell: bash
        run: |
          echo ${{ '${{needs.ci.outputs.commit_id}}' }}
          pip install yq
          yq -Yi '.image.tag = "${{ '${{needs.ci.outputs.commit_id}}' }}"' charts/${{values.app_name}}/values-${{values.app_env}}.yaml

      - name: Commit changes
        uses: EndBug/add-and-commit@v9
        with:
          message: 'Updates values.yaml with commit ${{ "${{ needs.ci.outputs.commit_id }}" }}'

      - name: Install ArgoCD
        shell: bash
        run: |
          curl -k -L https://argocd-server.argocd/download/argocd-linux-amd64 -o argocd
          sudo chmod +x argocd
          sudo mv ./argocd /usr/local/bin/

      - name: ArgoCD repo add if not connected
        shell: bash
        run: |
          argocd login argocd-server.argocd \
            --insecure  \
            --grpc-web \
            --username admin \
            --password  ${{ '${{ secrets.ARGOCD_PASSWORD }}' }}

          repo="https://github.com/xcirel-org/${{values.app_name}}.git"
          argocd repo list | grep -q $repo || argocd repo add $repo

          argocd app get ${{values.app_name}} || argocd app create ${{values.app_name}} \
            --repo $repo \
            --path charts/${{values.app_name}} \
            --dest-namespace ${{values.app_env}} \
            --dest-server https://kubernetes.default.svc \
            --values values-${{values.app_env}}.yaml \
            --revision main \
            --sync-policy manual \
            --sync-option CreateNamespace=true

      - name: ArgoCD app sync
        shell: bash
        run: |
          argocd login argocd-server.argocd \
            --insecure  \
            --grpc-web \
            --username admin \
            --password  ${{ '${{ secrets.ARGOCD_PASSWORD }}' }}
          argocd app sync ${{values.app_name}}
          argocd app wait ${{values.app_name}} --timeout 180
          